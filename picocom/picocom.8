.TH "picocom" "8" "" "" ""
.SH NAME
picocom \- minimal dumb-terminal emulation program
.SH SYNOPSIS
.B  picocom [
.I options
.B  ]
.I device
.br
.SH DESCRIPTION
As its name suggests,
.B picocom
is a minimal dumb-terminal emulation program. It is, in principle, very much like
.B minicom(1)
, only it's "pico" instead of "mini"! It was designed to serve as a simple, manual, modem configuration, testing, and debugging tool. It has also served (quite well) as a low-tech "terminal-window" to allow operator intervention in PPP connection scripts (something like the ms-windows "open terminal window before / after dialing" feature). It could also prove useful in many other similar tasks.
.br
.sp 0.6v
When
.B picocom
starts it opens the terminal (serial device) given as its non-option argument. Unless the
.I --noinit
option is given, it configures the device to the settings specified by the option-arguments (or to some default settings), and sets it to "raw" mode. If
.I --noinit
is given, the initialization and configuration is skipped; the device is just opened. Following this,
.B picocom
sets the standard-input and standard-output to raw mode. Having done so, it goes in a loop where it listens for input from stdin, or from the serial port. Input from the serial port is copied to the standard output while input from the standard input is copied to the serial port.
.B picocom
also scans its input stream for a user-specified control character, called the "escape character" (being by default "C-a"). If the escape character is seen, then instead of sending it to the serial-device, the program enters "command mode" and waits for the next character (which is called the "function character"). Depending on the value of the function character,
.B picocom
performs one of the operations described in the "Commands" section below.
.br
.sp 0.6v
.SH COMMANDS
Commands are given to
.B picocom
by first keying the "espace character" which by default is "C-a" (see "Options" below on how to change it), and then keying one for the function (command) characters shown here.
.TP 3
.B [escape character]
Send the escape character to the serial port and return to "transparent" mode. This means that if the escape character ("C-a", by default) is typed twice, the program sends the escape character to the serial port, and remains in transparent mode. This is a new behavior implemented in v1.4. Previously picocom used to ignore the escape-character when it was entered as a function character.
.TP 3
.B C-x
Exit the program: if the "--noreset" option was not given then the serial port is reset to its original settings before exiting; if it was given the serial port is not reset.
.TP 3
.B C-q
Quit the program *without* reseting the serial port, regardless of the "--noreset" option.
.TP 3
.B C-p
Pulse the DTR line. Lower it for 1 sec, and then raise it again.
.TP 3
.B C-t
Toggle the DTR line. If DTR is up, then lower it. If it is down, then raise it.
.TP 3
.B C-backslash
Generate a break sequence on the serial line. A break sequence is usually generated by marking (driving to logical one) the serial Tx line for an amount of time coresponding to several character durations.
.TP 3
.B C-u
Baud up. Increase the baud-rate. The list of baud-rates stepped-through by this command is: 300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200.
.TP 3
.B C-d
Baud down. Decrease the baud-rate. The list of baud-rates stepped-through by this command is the same as for the "baud-up" command.
.TP 3
.B C-f
Cycle through flow-control settings (RTS/CTS, XON/XOFF, none).
.TP 3
.B C-y
Cycle through parity settings (even, odd, none).
.TP 3
.B C-b
Cycle through databits-number settings (5, 6, 7, 8).
.TP 3
.B C-c
Toggle local-echo mode.
.TP 3
.B C-v
Show program options (like baud rate, data bits, etc). Only the options that can be modified online (through commands) are shown, not those that can only be set at the command-line.
.TP 3
.B C-s
Send (upload) a file (see "Sending and Receiving Files" below)
.TP 3
.B C-r
Receive (download) a file (see "Sending and Receiving Files" below)
.PP
After performing one of the above operations the program leaves the command mode and enters transparent mode. Example: To increase the baud-rate by two steps, you have to type:
.br
.sp 0.6v
C-a, C-u, C-a, C-u
.br
.sp 0.6v
assuming of-course that "C-a" is the escape character.
.br
.sp 0.6v
.SH SENDING AND RECEIVING FILES
.B picocom
can send and receive files over the serial port using external programs that implement the respective protocols. In Linux typical programs for this purpose are:
.IP \(em 3
.B rx(1)
- receive using the X-MODEM protocol
.IP \(em 3
.B rb(1)
- receive using the Y-MODEM protocol
.IP \(em 3
.B rz(1)
- receive using the Z-MODEM protocol
.IP \(em 3
.B sx(1)
- send using the X-MODEM protocol
.IP \(em 3
.B sb(1)
- send using the Y-MODEM protocol
.IP \(em 3
.B sz(1)
- send using the Z-MODEM protocol
.IP \(em 3
.B ascii-xfr(1)
- receive or transmit ASCII files
.PP
The name of, and the command-line options to, the program to be used for transmitting files are given by the "--send-cmd" option. Similarly the program to receive files, and its argumets, are given by the "--receive-cmd" option. For example, in order to start a
.B picocom
session that uses "sz" to transmit files, and "rz" to receive, you have to say something like this:
.br
.sp 0.6v
picocom --send-cmd "sz -vv" --receive-cmd "rz -vv"
.br
.sp 0.6v
During the picocom session, if you key the "send" or "receive" commands (e.g. by pressing C-a, C-s, or C-a, C-r) you will be prompted for a filename. At this prompt you can enter one or more file-names, and any additional arguments to the transmission or reception program. After that, picocom will start the the external program as specified by the "--send-cmd", or "--receive-cmd" option, and with any filenames and additional arguments you may have supplied. The standard input and output of the external program will be connected to the serial port. The standard error of the external program will be connected to the terminal which---while the program is running---will revert to canonical mode. Pressing 'C-c' while the external program is running will prematurely terminate it, and return control to
.B picocom
. Pressing 'C-c' at any other time, has no special effect; the character is normally passed to the serial port.
.br
.sp 0.6v
.SH INPUT, OUTPUT, AND ECHO MAPPING
Using the "--imap", "--omap", and "--emap" options you can make
.B picocom
map (tranlate, replace) certain special characters after being read from the serial port (with
.I --imap
), before being written to the serial port (with
.I --omap
), and before being locally echoed to the terminal (standard output) if local echo is enabled (with
.I --emap
). These mapping options take, each, a single argument which is a comma-separated list of one or more of the following identifiers:
.IP \(em 3
crlf: map CR to LF
.IP \(em 3
crcrlf: map CR to CR + LF
.IP \(em 3
igncr: ignore CR
.IP \(em 3
lfcr: map LF to CR
.IP \(em 3
lfcrlf: map LF to CR + LF
.IP \(em 3
ignlf: ignore LF
.IP \(em 3
bsdel: map BS --> DEL
.IP \(em 3
delbs: map DEL --> BS
.PP
For example the command:
.br
.sp 0.6v
picocom --omap crlf,delbs --imap inglf,bsdel --emap crcrlf ...
.br
.sp 0.6v
will: Replace every CR (carriage return, 0x0d) caracter with LF (line feed, 0x0a) and every DEL (delete, 0x7f) character with BS (backspace, 0x08) before writing it to the serial port. Ignore (not write to the terminal) every LF character read from the serial port and replace every BS character read from the serial port with DEL. Replace every CR character with CR and LF when echoing to the terminal (if local-echo is enabled).
.br
.sp 0.6v
.SH OPTIONS
.B picocom
accepts the following command-line options
.TP 3
.B --baud | -b
Defines the baud-rate to set the serial-port (terminal) to.
.TP 3
.B --flow | -f
Defines the flow-control mode to set the serial-port to. Must be one of:
.RS 3
.IP \(em 3
\'x' for xon/xoff (software) mode
.IP \(em 3
\'h' for hardware flow control (RTS/CTS)
.IP \(em 3
\'n' for no flow control
.PP
(Default: 'n')
.RE
.TP 3
.B --parity | -p
Defines the parity mode to set the serial-port to. Must be one of:
.RS 3
.IP \(em 3
\'o' for odd parity mode.
.IP \(em 3
\'e' for even parity mode.
.IP \(em 3
\'n' for no parity, mode.
.PP
(Default: 'n')
.RE
.TP 3
.B --databits | -d
Defines the number of data bits in every character. Must be one of: 5, 6, 7, 8
.br
.sp 0.6v
(Default: 8)
.TP 3
.B --esacpe | -e
Defines the character that will make picocom enter command-mode (see description above). If 'x' is given, then C-x will make picocom enter command mode.
.br
.sp 0.6v
(Default: 'a')
.TP 3
.B --echo | -c
Enable local echo. Every character being read from the terminal (standard input) is echoed to the terminal (standard output) subject to the echo-mapping configuration (see
.I --emap
option.
.br
.sp 0.6v
(Default: Disabled)
.TP 3
.B --noinit | -i
If given,
.B picocom
will not initialize, reset, or otherwise meddle with the serial port at start-up. It will just open it. This is useful, for example, for connecting
.B picocom
to already-connected modems, or already configured ports without terminating the connection, or altering the settings. If required serial port parameters can then be adjusted at run-time by commands.
.TP 3
.B --noreset | -r
If given,
.B picocom
will not *reset* the serial port when exiting. It will just close the filedes and do nothing more. This is useful, for example, for leaving modems connected when exiting
.B picocom
. Regardless whether the "--noreset" option is given the user can exit
.B picocom
using the "Quit" command (instead of "Exit"), which never resets the serial port. If "--noreset" is given then "Quit" and "Exit" behave essentially the same.
.TP 3
.B --nolock | -l
If given,
.B picocom
will *not* attempt to lock the serial port before opening it. Normally picocom attempts to get a UUCP-style lock-file (e.g. "/var/lock/LCK..ttyS0") before opening the port. Failing to do so, results in the program exiting after emitting an error-message. It is possible that your picocom binary is compiled without this option.
.TP 3
.B --send-cmd | -s
Specifies the external program (and any arguments to it) that will be used for transmitting files.
.br
.sp 0.6v
Default: "sz -vv"
.TP 3
.B --receive-cmd | -v
Specifies the external program (and any arguments to it) that will be used for receiving files.
.br
.sp 0.6v
(Default: "rz -vv")
.TP 3
.B --imap
Specifies the input character map (i.e. special characters to be replaced when read from the serial port). Example: "--imap crlf,delbs"
.br
.sp 0.6v
(Defaul: Empty)
.TP 3
.B --omap
Specifies the output character map (i.e. special characters to be replaced before being written to serial port). Example: "--omap crcrlf,bsdel"
.br
.sp 0.6v
(Defaul: Empty)
.TP 3
.B --emap
Specifies the local-echo character map (i.e. special characters to be replaced before being echoed-back to the terminal, if local-echo is enabled). Example: "--emap crcrlf,bsdel"
.br
.sp 0.6v
(Defaul: delbs,crcrlf)
.TP 3
.B --help | -h
Print a short help message describing the command-line options.
.PP
.SH AUTHOR
picocom was written by Nick Patavalis (npat@efault.net)
.br
.sp 0.6v
.SH AVAILABILITY
The latest version of "picocom" can be downloaded from:
.B http://code.google.com/p/picocom/
